<pre>
1. Post.find([주 key]) 변수를 배열로 여러개도 가능
2. Post.find_by([key: value]) , 로 여러개 넣기 가능
여기까지 key 로 찾기

3. Post.where([칼럼이름]: [값])
3-1. Post.where([칼럼이름]: [배열로 값1, 값2, ...])
일치하는 것만 찾음.

3-2. Post.where([칼럼이름] = ?  AND [칼럼이름2] = ? ...., params[:], params[:]...)
3-3. Post.where([칼럼이름] = [내가 지정한 이름1] AND [칼럼이름2] = [내가 지정한 이름2] ...., [내가 지정한 이름1] : params[:] ....)
검색기능에 유용
3-2는 코드가 간단하지만 변수의 순서와 증감에 따른 영향을 받음. -> 매개변수의 숫자가 적은 경우
3-3는 코드가 길지만 변수간의 대응관계를 쉽게 알 수 있음. -> 매개변수의 숫자가 많은 경우

4. Post.where.not([칼럼이름]: [값])
- 내용과 일치하지 않는 것 모두 내보냄. where와 같이 쓰도록 하자.

5. Post.where([칼럼이름]: [값]).order([정렬기준칼럼] :asc(오름차순) or :desc(내림차순))
5-1. Post.limit([최대몇개추출])
5-2. Post.row([시작위치])
- 둘다 order와 같이 써야 좋다.

6. Post.select([추출을 원하는 칼럼])
- 모두 말고 원하는 칼럼만 뽑아냄.

7. .distinct
- 중복되는 데이터 제거

8. Post.first
8-1. Post.last
- 말그대로 첫번째와 마지막 데이터 추출
- 가장 마지막에 적어줘야함.
- limit와 같이 썻을 때 limit만 적용됨.

9. Post.exists?(조건)
- 존재하는지? 물어보는 메서드
- 조건에는 여러가지 들어갈 수 있다. 책 참고

10. .count
- 숫자를 센다.

11. Post.where(원래거를).update_all(요걸로 업데이트)
- 기존의 값을 업데이트 하는 메서드

12. Post.destroy
- select -> delete
12-1. Post.delete
- delete 만 함.
12-2. Post.destroy_all(여기 적용되는거 다 삭제!)

</pre>
